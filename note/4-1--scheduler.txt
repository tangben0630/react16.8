4-1: 

  流程概览

    1, 创建更新(ReactDom.render, setState, forceUpdate)

    2, createUpdate

    3, scheduleWork
        找到更新对应的FiberRoot节点
        如果符合条件重置stack
        如果符合条件就请求工作调度


    4, addRootToScheduleWork 
        reactDom.render就会创建一个root节点, 多次调用会创建多个root节点, 都有独立的update

    5, 判断是否正在render阶段或者前后root不同 
        Y ---> requestWork
                加入到root调度队列
                判断是否批量更新
                根据expirationTime判断调度类型

                scheduleCallbackWithExpirationTime: 实现类似于 requestidlecallback 的功能
                让我们能够在浏览器空闲的情况下, 去执行一下不是特别重要的任务, 给我们设置一个deadline
                这个时间前可以执行, 在这个时间后, 必须执行权交换浏览器, 等浏览器再有空再执行

                

    6, 判断 expirationTime 是否是 Sync
        Y ---> performSyncWork
        N ---> scheduleCallbackWithExpirationTime

        scheduleCallbackWithExpirationTime: 

          大体原理是利用 requestidlecallback 浏览器优先进行自己的任务, 每一帧有多余的时间后, 调用callback
          react会自己计时, 在时间内会进行自己的callback, 时间不够要交换执行权给浏览器保证高优先级任务
          先执行

          performSyncWork 是浏览器的一个callback


    
