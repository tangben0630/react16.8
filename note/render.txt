第二章：主要是讲了 创建完更新 到 调度的过程



  FiberRoot：是什么东西 ？

    1，整个应用的起点
    2，包含应用挂载的目标节点
    3，记录整个应用的更新过程的各种信息

  Fiber：

    1，每一个ReactElement 都对应一个Fiber对象
    2，记录节点的各种状态
    3，类组件，函数组件，都是用fiber来记录状态信息的
    4，串联整个应用

  Update:

    1，用于存放组件的状态的改变
    2，存放于UpdateQueue中
    3，多个可以同时存在

  setState & forceUpdate



    1，给节点的fiber创建更新
    2，更新的类型是不同的
    3，


第四章：react是如何更新的

  1，Scheduler 的整体流程概览
  2，调度过程中各种全局变量的一览
  3，构建任务调度的概念

  大体的流程
    ReactDOM.render() ===> createUpdate  ===> schedulerWork ===> addRootToScheduler
    ===> 是否正在render阶段 ===> 


  requestWork的工作：
    1，加入root调度队列
    2，判断是否批量更新
    3，根据 expirationTime 判断调度类型

  reactScheduler:

    1，模拟的是 浏览器 requestIdleCallback 的api，但是由于浏览器兼容性问题
    2，维护时间片
    3，等到浏览器有空闲的时候，执行逻辑
    4，会有调度列表和超时的判断
    5，requestIdleCallback 优先级较低
    6，30帧是底线
    7，必须留 11ms 给浏览器渲染动画
    8，留给react自己渲染的时间只有22ms，

    目的：react更新自己操作的时间不超过一个特定的时间

    performWork：
      1，是否有deadline
      2，循环渲染Root的条件
      3，超过时间片的处理









